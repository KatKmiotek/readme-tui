name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      version_tag: ${{ steps.get-version.outputs.version_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get release version
        id: get-version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"

  create-release:
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            extension: .exe
            runner: windows-latest
          - target: x86_64-apple-darwin
            extension: .zip
            runner: macos-latest

    runs-on: ${{ matrix.runner }}
    needs: [get-version]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Zip file
        if: ${{ matrix.runner == 'macos-latest'}}
        run: |
          cd target/${{ matrix.target }}/release
          zip -j cli-doc${{ matrix.extension }} cli-doc


      - name: Create release and upload binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.get-version.outputs.version_tag }}
          name: Release ${{ needs.get-version.outputs.version_tag }}
          files: |
            target/${{ matrix.target }}/release/cli-doc${{ matrix.extension }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
